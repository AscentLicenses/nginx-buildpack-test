#!/usr/bin/env bash
# Usage: bin/compile BUILD_DIR CACHE_DIR ENV_DIR
# https://devcenter.heroku.com/articles/buildpack-api#bin-compile

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
# echo "-----> nginx-buildpack: BUILD_DIR=$BUILD_DIR CACHE_DIR=$CACHE_DIR ENV_DIR=$ENV_DIR"

NGINX_VERSION=$(cat $ENV_DIR/NGINX_VERSION)
echo "-----> nginx-buildpack: NGINX_VERSION=$NGINX_VERSION STACK=$STACK"

FINAL_NGINX_BINARY=$CACHE_DIR/$STACK/nginx

if [ -f $FINAL_NGINX_BINARY ]; then
  echo "-----> nginx-buildpack: $FINAL_NGINX_BINARY already exists"
else
  echo "-----> nginx-buildpack: $FINAL_NGINX_BINARY does not exist. Proceeding to compile it"

  mkdir -p $CACHE_DIR/$STACK
  cd $CACHE_DIR/$STACK

  # Install C library for reading MaxMind DB files
  # Resource: https://github.com/maxmind/libmaxminddb
  if [ ! -d "libmaxminddb" ]; then
    git clone --recursive https://github.com/maxmind/libmaxminddb.git
  fi

  cd libmaxminddb
  ./bootstrap
  ./configure --prefix=/tmp/libmaxminddb
  make
  make check
  make install

  cd $CACHE_DIR/$STACK

  # Get the geoip2 nginx module
  if [ ! -d "ngx_http_geoip2_module" ]; then
    git clone https://github.com/leev/ngx_http_geoip2_module.git
  fi

  wget -c http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz
  tar xzf nginx-$NGINX_VERSION.tar.gz
  cd nginx-$NGINX_VERSION

  # Compile nginx
  ./configure \
      --with-ld-opt="-L /tmp/libmaxminddb/lib" \
      --with-cc-opt="-I /tmp/libmaxminddb/include" \
      --prefix=/tmp/nginx \
      --with-http_ssl_module \
      --with-http_realip_module \
      --with-http_gzip_static_module \
      --with-http_auth_request_module \
      --add-module=../ngx_http_geoip2_module
  make
  make install

  # Clean up the compile dir
  cd $CACHE_DIR/$STACK
  rm -rf nginx-$NGINX_VERSION

  # Copy the resulting binary to the cache dir
  cp /tmp/nginx/sbin/nginx $FINAL_NGINX_BINARY
  echo "-----> nginx-buildpack: nginx $NGINX_VERSION for $STACK compiled and placed into $FINAL_NGINX_BINARY"
fi

# Place the nginx binary into the app
mkdir -p $BUILD_DIR/bin
cp $FINAL_NGINX_BINARY $BUILD_DIR/bin/nginx
echo "-----> nginx-buildpack: Installed nginx $NGINX_VERSION $STACK to apps /bin"

# cp bin/start-nginx BUILD_DIR/bin/
# echo '-----> nginx-buildpack: Added start-nginx to apps /bin'
#
# mkdir -p $BUILD_DIR/config
#
# cp config/mime.types $BUILD_DIR/config
# echo '-----> nginx-buildpack: Default mime.types copied to app/config/'
#
# if [[ ! -f $1/config/nginx.conf.erb ]]; then
# 	cp config/nginx.conf.erb "$1/config/"
# 	echo '-----> nginx-buildpack: Default config copied to app/config.'
# else
# 	echo '-----> nginx-buildpack: Custom config found in app/config.'
# fi

exit 0
